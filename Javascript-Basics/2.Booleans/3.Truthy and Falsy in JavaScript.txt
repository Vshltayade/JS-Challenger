This lesson explains the concept of truthy and falsy values in JavaScript, and how it relates to JavaScript Booleans.

In the previous lesson you got to know the two boolean values true and false.
const isTrue = true;

However, sometimes we want to work with other data types, such as numbers, in a Boolean context.

Actually, every single value in JavaScript can be transformed to a boolean value.

To do so, we can make use of the Boolean() function. Let's try it:
console.log(Boolean(100));
true

Here, we forced the value 100 to be converted to a Boolean, and the result is true.

But, why does 100 become true? That's where the concepts of truthy and falsy come in.

Every single value in JavaScript is considered either truthy or falsy. Truthy values result in the value true when coerced into a Boolean value. Falsy values result in the value false.

All of the following values are falsy:
false
null
undefined
0
-0
NaN
An empty string ('')

There are data types in this list that you don't know yet. You will get to know them in the next chapters.

It is important to know that all JavaScript values that are not in this list are truthy.

Here's a list of numbers. What do you think? Which of them become true and which become false?
console.log(Boolean(100)); // true
console.log(Boolean(1)); // true
console.log(Boolean(0)); // false
console.log(Boolean(-5)); // true

Right, all numbers except 0 are truthy.

What will be the output?
const price = 10;
console.log(Boolean(price));
//true

What will be the output?
let price;
console.log(Boolean(price));
//false